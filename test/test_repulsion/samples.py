"""Data for testing repulsion taken from https://github.com/grimme-lab/mstore"""

from __future__ import annotations
import torch

from xtbml.typing import Molecule, Tensor
from xtbml.utils import symbol2number


class Record(Molecule):
    """Format of reference records containing GFN1-xTB and GFN2-xTB reference values."""

    gfn1: Tensor
    """Reference values for GFN1-xTB"""

    gfn2: Tensor
    """Reference values for GFN1-xTB"""


amino20x4: dict[str, Record] = {
    "LYS_xao": {
        "gfn1": torch.tensor(0.54175667737478617),
        "gfn2": torch.tensor(0.0),
        "numbers": symbol2number(
            [
                "N",
                "C",
                "C",
                "O",
                "C",
                "C",
                "H",
                "H",
                "H",
                "H",
                "H",
                "N",
                "H",
                "C",
                "H",
                "H",
                "H",
                "C",
                "O",
                "C",
                "H",
                "H",
                "H",
                "H",
                "C",
                "H",
                "H",
                "C",
                "H",
                "H",
                "N",
                "H",
                "H",
            ]
        ),
        "positions": torch.tensor(
            [
                -3.08629288118877,
                -2.19561127309795,
                -0.77217893055321,
                -1.06879606686991,
                -0.61608658924481,
                0.23634288443356,
                -1.53102984802615,
                2.13141574530499,
                -0.56939167294673,
                -0.40983742362732,
                3.10958800397462,
                -2.34867178991298,
                1.47971484502131,
                -1.55589129675000,
                -0.67464620457756,
                3.67080881782305,
                -0.22160454696147,
                0.62879195584726,
                -2.83661151752225,
                -2.99270493895025,
                -2.48021099590057,
                -1.20083247698939,
                -0.74777619088370,
                2.28964206874229,
                1.58937150127564,
                -3.58727643425421,
                -0.32481723884977,
                3.54409665680710,
                -0.53132058661176,
                2.66860726830112,
                3.50974930263916,
                1.80833214591191,
                0.30677605183608,
                -3.30361007773525,
                3.31485339209112,
                0.83839008978212,
                -4.34880376214547,
                2.20488174175011,
                1.99552260527961,
                -4.18868179160437,
                5.81154501452241,
                0.15747382156164,
                -5.61569230213706,
                5.74761437268114,
                -1.32808061177308,
                -2.59583748873156,
                6.90533962601390,
                -0.53230790566849,
                -4.98328471638590,
                6.72600829931603,
                1.81417357766629,
                -5.35207705391596,
                -2.42418436069169,
                0.40031295493727,
                -5.84409781413938,
                -1.31026328950066,
                2.38293392048313,
                -7.23017418928331,
                -4.16191765723655,
                -0.85113016451490,
                -7.68462505102300,
                -5.67776148707435,
                0.46000324484997,
                -6.54293162706832,
                -4.97137068473344,
                -2.60950586255879,
                -8.95780193409875,
                -3.11008592668001,
                -1.21083256960746,
                1.60633375878005,
                -1.24066001627663,
                -2.71011415264373,
                6.22896524570903,
                -1.13514352758590,
                -0.31993549624624,
                6.36077259797159,
                -0.80721133290823,
                -2.35609502036389,
                6.39494201117646,
                -3.17620769071747,
                -0.03322800857001,
                8.43206186995541,
                0.18178876655507,
                0.98995969125296,
                8.26394746388151,
                2.21871263547301,
                0.71486715223124,
                8.30590057110490,
                -0.13981983839829,
                3.02371506696762,
                10.95680155885510,
                -0.57943795611462,
                0.16732903266954,
                11.12834218297359,
                -0.27087148385594,
                -1.71428160151084,
                11.15655125465616,
                -2.46919075399082,
                0.40005961272418,
            ]
        ).reshape((-1, 3)),
    },
}

mb16_43: dict[str, Record] = {
    "01": {
        "gfn1": torch.tensor(0.16777923624986593),
        "gfn2": torch.tensor(0.15297938789402879),
        "numbers": symbol2number(
            [
                "Na",
                "H",
                "O",
                "H",
                "F",
                "H",
                "H",
                "O",
                "N",
                "H",
                "H",
                "Cl",
                "B",
                "B",
                "N",
                "Al",
            ]
        ),
        "positions": torch.tensor(
            [
                -1.85528263484662,
                3.58670515364616,
                -2.41763729306344,
                4.40178023537845,
                0.02338844412653,
                -4.95457749372945,
                -2.98706033463438,
                4.76252065456814,
                1.27043301573532,
                0.79980886075526,
                1.41103455609189,
                -5.04655321620119,
                -4.20647469409936,
                1.84275767548460,
                4.55038084858449,
                -3.54356121843970,
                -3.18835665176557,
                1.46240021785588,
                2.70032160109941,
                1.06818452504054,
                -1.73234650374438,
                3.73114088824361,
                -2.07001543363453,
                2.23160937604731,
                -1.75306819230397,
                0.35951417150421,
                1.05323406177129,
                5.41755788583825,
                -1.57881830078929,
                1.75394002750038,
                -2.23462868255966,
                -2.13856505054269,
                4.10922285746451,
                1.01565866207568,
                -3.21952154552768,
                -3.36050963020778,
                2.42119255723593,
                0.26626435093114,
                -3.91862474360560,
                -3.02526098819107,
                2.53667889095925,
                2.31664984740423,
                -2.00438948664892,
                -2.29235136977220,
                2.19782807357059,
                1.12226554109716,
                -1.36942007032045,
                0.48455055461782,
            ],
        ).reshape((-1, 3)),
    },
    "02": {
        "gfn1": torch.tensor(0.12702003611285190),
        "gfn2": torch.tensor(0.10745931926703985),
        "numbers": symbol2number(
            [
                "H",
                "S",
                "B",
                "O",
                "Mg",
                "H",
                "H",
                "H",
                "Si",
                "H",
                "B",
                "Li",
                "F",
                "H",
                "H",
                "S",
            ]
        ),
        "positions": torch.tensor(
            [
                -1.79537625851198,
                -3.77866422935275,
                -1.07883558363403,
                -2.68278833302782,
                0.38892666265890,
                1.66214865238427,
                0.11484649791305,
                1.48857933226955,
                3.65660396510375,
                -1.07998879593946,
                -0.16259121615748,
                -4.55703065871422,
                0.60302832999383,
                4.08816149622342,
                -0.02589373148029,
                -1.22534089315880,
                -1.79981382478068,
                -3.70773173318592,
                -1.33460982049866,
                -4.24819082475503,
                2.72791902701083,
                -0.16278082578516,
                2.41267994179303,
                5.69030695190570,
                2.87802444057103,
                -0.33120525058830,
                1.88311373530297,
                0.68489327931487,
                0.32790204044961,
                -4.20547693710673,
                -1.20919773588330,
                -2.87253762561437,
                0.94064204223101,
                -3.25572604597922,
                2.21241092990940,
                -2.86715549314771,
                -1.83147468262373,
                5.20527293771933,
                -2.26976270603341,
                4.90885865772880,
                -1.92576561961811,
                2.99069919443735,
                1.26806242248758,
                -2.60409341782411,
                0.55162805282247,
                4.11956976339902,
                1.59892866766766,
                -1.39117477789609,
            ],
        ).reshape((-1, 3)),
    },
    "03": {
        "gfn1": torch.tensor(0.16600531760459214),
        "gfn2": torch.tensor(0.15818907118271672),
        "numbers": symbol2number(
            [
                "C",
                "O",
                "H",
                "Li",
                "Mg",
                "Al",
                "C",
                "H",
                "H",
                "H",
                "F",
                "S",
                "C",
                "H",
                "Na",
                "H",
            ]
        ),
        "positions": torch.tensor(
            [
                -0.02148551327524,
                -0.67161751504297,
                -4.75078512817560,
                1.37792545875526,
                -3.24818416423144,
                3.83896600631495,
                -2.23986953822894,
                1.64550402751694,
                3.42773272178522,
                -0.87622711432790,
                -2.74068400827752,
                1.43723692979592,
                1.29492470653815,
                1.86470311043681,
                -1.04536500695239,
                -3.65768365013010,
                0.45437052179208,
                -1.41566056087159,
                -0.23245910487384,
                -1.83274112101585,
                -2.43395808606122,
                0.30373451850419,
                -3.84228931776777,
                -2.44882782867802,
                -3.36159503902161,
                4.20056392581975,
                1.63352684198071,
                0.49372989648081,
                -1.56245253044952,
                -6.53610501083288,
                4.38566058812996,
                1.86127331114460,
                0.56178822055152,
                -1.17545963764009,
                2.49456345795141,
                -4.90195191215762,
                -1.86623614216854,
                2.76329843590746,
                1.71572598870213,
                1.02361259176985,
                -4.24377370348987,
                5.32418288889440,
                4.71194535010347,
                -1.03648125005561,
                3.35573062118779,
                -0.16051737061546,
                3.89394681976155,
                2.23776331451663,
            ],
        ).reshape((-1, 3)),
    },
    "SiH4": {
        "gfn1": torch.tensor(3.0331305861808766e-002),
        "gfn2": torch.tensor(3.1536555053538279e-002),
        "numbers": symbol2number(["Si", "H", "H", "H", "H"]),
        "positions": torch.tensor(
            [
                0.00000000000000,
                -0.00000000000000,
                0.00000000000000,
                1.61768389755830,
                1.61768389755830,
                -1.61768389755830,
                -1.61768389755830,
                -1.61768389755830,
                -1.61768389755830,
                1.61768389755830,
                -1.61768389755830,
                1.61768389755830,
                -1.61768389755830,
                1.61768389755830,
                1.61768389755830,
            ],
        ).reshape((-1, 3)),
    },
}

# samples = amino20x4 | mb16_43 # Python 3.9+
samples = {**amino20x4, **mb16_43}
