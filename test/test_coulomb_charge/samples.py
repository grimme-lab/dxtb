"""Data for testing Coulomb contribution."""

from typing import Dict
import torch
from xtbml.typing import Molecule, Tensor
from xtbml.utils import symbol2number


class Record(Molecule):
    """Format of reference records containing GFN1-xTB and GFN2-xTB reference values."""

    q: Tensor
    """Atomic or shell-resolved partial charges for this structure."""

    es2: Tensor
    """Reference values for ES2 (GFN1-xTB)"""

    es3: Tensor
    """Reference values for ES3 (GFN1-xTB)"""


Samples = Dict[str, Record]

mb16_43: Samples = {
    "01": {
        "es2": torch.tensor(0.10952019883948200),
        "es3": torch.tensor(0.0212785489857197),
        "numbers": symbol2number(
            [
                "Na",
                "H",
                "O",
                "H",
                "F",
                "H",
                "H",
                "O",
                "N",
                "H",
                "H",
                "Cl",
                "B",
                "B",
                "N",
                "Al",
            ]
        ),
        "positions": torch.tensor(
            [
                -1.85528263484662,
                3.58670515364616,
                -2.41763729306344,
                4.40178023537845,
                0.02338844412653,
                -4.95457749372945,
                -2.98706033463438,
                4.76252065456814,
                1.27043301573532,
                0.79980886075526,
                1.41103455609189,
                -5.04655321620119,
                -4.20647469409936,
                1.84275767548460,
                4.55038084858449,
                -3.54356121843970,
                -3.18835665176557,
                1.46240021785588,
                2.70032160109941,
                1.06818452504054,
                -1.73234650374438,
                3.73114088824361,
                -2.07001543363453,
                2.23160937604731,
                -1.75306819230397,
                0.35951417150421,
                1.05323406177129,
                5.41755788583825,
                -1.57881830078929,
                1.75394002750038,
                -2.23462868255966,
                -2.13856505054269,
                4.10922285746451,
                1.01565866207568,
                -3.21952154552768,
                -3.36050963020778,
                2.42119255723593,
                0.26626435093114,
                -3.91862474360560,
                -3.02526098819107,
                2.53667889095925,
                2.31664984740423,
                -2.00438948664892,
                -2.29235136977220,
                2.19782807357059,
                1.12226554109716,
                -1.36942007032045,
                0.48455055461782,
            ],
        ).reshape((-1, 3)),
        "q": torch.tensor(
            [
                7.73347900345264e-1,
                1.07626888948184e-1,
                -3.66999593831010e-1,
                4.92833325937897e-2,
                -1.83332156197733e-1,
                2.33302086605469e-1,
                6.61837152062315e-2,
                -5.43944165050002e-1,
                -2.70264356583716e-1,
                2.66618968841682e-1,
                2.62725033202480e-1,
                -7.15315510172571e-2,
                -3.73300777019193e-1,
                3.84585237785621e-2,
                -5.05851088366940e-1,
                5.17677238544189e-1,
            ]
        ),
    },
    "02": {
        "es2": torch.tensor(0.16666303125798329),
        "es3": torch.tensor(0.0155668621882796),
        "numbers": symbol2number(
            [
                "H",
                "S",
                "B",
                "O",
                "Mg",
                "H",
                "H",
                "H",
                "Si",
                "H",
                "B",
                "Li",
                "F",
                "H",
                "H",
                "S",
            ]
        ),
        "positions": torch.tensor(
            [
                -1.79537625851198,
                -3.77866422935275,
                -1.07883558363403,
                -2.68278833302782,
                0.38892666265890,
                1.66214865238427,
                0.11484649791305,
                1.48857933226955,
                3.65660396510375,
                -1.07998879593946,
                -0.16259121615748,
                -4.55703065871422,
                0.60302832999383,
                4.08816149622342,
                -0.02589373148029,
                -1.22534089315880,
                -1.79981382478068,
                -3.70773173318592,
                -1.33460982049866,
                -4.24819082475503,
                2.72791902701083,
                -0.16278082578516,
                2.41267994179303,
                5.69030695190570,
                2.87802444057103,
                -0.33120525058830,
                1.88311373530297,
                0.68489327931487,
                0.32790204044961,
                -4.20547693710673,
                -1.20919773588330,
                -2.87253762561437,
                0.94064204223101,
                -3.25572604597922,
                2.21241092990940,
                -2.86715549314771,
                -1.83147468262373,
                5.20527293771933,
                -2.26976270603341,
                4.90885865772880,
                -1.92576561961811,
                2.99069919443735,
                1.26806242248758,
                -2.60409341782411,
                0.55162805282247,
                4.11956976339902,
                1.59892866766766,
                -1.39117477789609,
            ],
        ).reshape((-1, 3)),
        "q": torch.tensor(
            [
                7.38394711236234e-2,
                -1.68354976558608e-1,
                -3.47642833746823e-1,
                -7.05489267186003e-1,
                7.73548301641266e-1,
                2.30207581365386e-1,
                1.02748501676354e-1,
                9.47818107467040e-2,
                2.44260351729187e-2,
                2.34984927037408e-1,
                -3.17839896393030e-1,
                6.67112994818879e-1,
                -4.78119977010488e-1,
                6.57536027459275e-2,
                1.08259054549882e-1,
                -3.58215329983396e-1,
            ]
        ),
    },
    "07": {
        "es2": torch.tensor(0.12017418620257683),
        "es3": torch.tensor(0.0),
        "numbers": symbol2number(
            [
                "C",
                "H",
                "B",
                "H",
                "H",
                "Cl",
                "F",
                "N",
                "C",
                "H",
                "S",
                "H",
                "H",
                "O",
                "F",
                "Mg",
            ]
        ),
        "positions": torch.tensor(
            [
                [-3.75104222741336, -5.81308736205268, -1.22507366840233],
                [-1.45226572768296, -3.01878767879831, 2.38723142561073],
                [-1.99423317853240, -3.52953889999752, -1.30301724065129],
                [-4.33750965171233, -6.65936981001909, 0.55979831484564],
                [-4.51833920602637, -6.72398616322561, -2.90031439001886],
                [-1.25657105633503, -2.39389339457851, -4.58765484136593],
                [-0.14864209579028, 4.40065007854051, 1.35717716022989],
                [-0.91662354168326, -2.22680612180354, 0.71122632634918],
                [1.83282041695179, 5.36061635978157, 3.22095765094686],
                [0.66518416413161, 6.30980889882630, 4.62705414435961],
                [3.68701623423530, 2.79957532381681, 4.21336212424745],
                [1.69373321407504, 0.01030275402386, -3.74820290941150],
                [3.35791986589808, 2.52513229318111, -3.46078430541625],
                [2.79199182665654, 1.01759578021447, -2.59243571461852],
                [3.05358934464082, 7.15252337445235, 1.82164153773112],
                [1.29297161858681, 0.78926456763834, 0.91903438556425],
            ],
        ),
        "q": torch.tensor(  # shell-resolved charges
            [
                8.85960229060055e-1,
                -1.03567241653662e0,
                2.34499192077770e-1,
                -2.18333480864186e-2,
                1.09026104661485e0,
                -7.54283954798938e-1,
                4.12740327203921e-2,
                -9.60021563849638e-3,
                5.17672944681095e-2,
                -1.05238375989861e-2,
                5.94332546515988e-2,
                -3.94897989828280e-1,
                1.44506731071946e-2,
                1.57870128213110e-1,
                -4.64405557396352e-1,
                4.78122334280047e-1,
                -1.01437364107707e0,
                9.10337331767967e-1,
                -4.61579000227231e-1,
                9.07619848805192e-2,
                -3.07310018122722e-2,
                1.13955875471381e-1,
                -3.99913576087036e-1,
                1.04872002787662e-2,
                4.12951024314537e-1,
                -5.26874026571100e-2,
                4.04435991881125e-1,
                -2.70107073714884e-2,
                3.13675308978710e-1,
                -9.44236655190031e-1,
                1.75329569882602e-1,
                -4.26004749886597e-1,
                1.24860566181157e0,
                -6.46424080267374e-1,
            ]
        ),
    },
    "08": {
        "es2": torch.tensor(0.11889887832100766),
        "es3": torch.tensor(0.0),
        "numbers": symbol2number(
            [
                "C",
                "O",
                "B",
                "F",
                "H",
                "Al",
                "H",
                "H",
                "O",
                "B",
                "Be",
                "C",
                "H",
                "H",
                "B",
                "F",
            ]
        ),
        "positions": torch.tensor(
            [
                [-1.27823293129313, 0.06442674490989, 2.76980447300615],
                [2.05039033278229, 0.64690940303039, -0.29571013189632],
                [-0.07388472989895, 2.46033979750309, -1.30590420482375],
                [1.10019432741349, 4.43501067437330, -2.64796515354449],
                [-1.89008873387150, 0.02064696008121, 4.74727599156952],
                [0.81013963557610, 1.41165582964016, -6.35835508532445],
                [2.51638337449170, 1.74086425451198, 3.45340860505386],
                [2.62048878651566, -1.58024532804571, 2.87415150030394],
                [-0.92472602392464, -3.37659091509259, -0.68138826965952],
                [-2.19962829538645, -2.53092502025386, 1.35654623095955],
                [0.92594749614406, -1.61669775704536, -1.93872059141561],
                [1.63141903847248, 0.18081362275364, 2.42899361614054],
                [-3.96336280784845, -3.68611886004249, 2.18920954455515],
                [-1.17097381446263, 1.08303722364990, -3.04753977323348],
                [-2.18263847972349, 2.31604957286801, 1.11461091308323],
                [2.02857282501340, -1.56917620284149, -4.65841766477431],
            ],
        ),
        "q": torch.tensor(  # shell-resolved charges
            [
                9.06259904944829e-1,
                -1.11730821567902e0,
                2.78017329305492e-1,
                -7.80028989546297e-1,
                1.11352815063389e0,
                -6.98290073981154e-1,
                2.03943236255318e-1,
                -5.29902840441233e-1,
                4.38219939650397e-2,
                -1.86746328945826e-2,
                4.65996457236599e-2,
                4.97590807484258e-1,
                -2.50441962186972e-1,
                4.83295451755440e-2,
                -2.26559244782012e-2,
                4.50331992744248e-2,
                -2.11569328297532e-2,
                3.12470620007346e-1,
                -9.15589243372491e-1,
                1.06394261835743e0,
                -6.71952361588756e-1,
                1.82322476598938e0,
                -9.26110009158329e-1,
                9.78357111140355e-1,
                -7.84824170464332e-1,
                -9.43549308434806e-2,
                -8.78133979988158e-3,
                -7.07783143624696e-2,
                -3.36692984665466e-2,
                6.75375129657761e-1,
                -7.01857024422455e-1,
                2.11598132242645e-1,
                -6.01715925641418e-1,
            ]
        ),
    },
    "SiH4": {
        "es2": torch.tensor(5.0778974565885598e-004),
        "es3": torch.tensor(-2.9771152185276151e-005),
        "numbers": symbol2number(["Si", "H", "H", "H", "H"]),
        "positions": torch.tensor(
            [
                [0.00000000000000, -0.00000000000000, 0.00000000000000],
                [1.61768389755830, 1.61768389755830, -1.61768389755830],
                [-1.61768389755830, -1.61768389755830, -1.61768389755830],
                [1.61768389755830, -1.61768389755830, 1.61768389755830],
                [-1.61768389755830, 1.61768389755830, 1.61768389755830],
            ],
        ),
        "q": torch.tensor(
            [
                -8.41282505804719e-2,
                2.10320626451180e-2,
                2.10320626451178e-2,
                2.10320626451179e-2,
                2.10320626451179e-2,
            ]
        ),
    },
    "SiH4_shell": {
        "es2": torch.tensor(4.3803610149365790e-003),
        "es3": torch.tensor(-2.9771152185276151e-005),
        "numbers": symbol2number(["Si", "H", "H", "H", "H"]),
        "positions": torch.tensor(
            [
                [0.00000000000000, -0.00000000000000, 0.00000000000000],
                [1.61768389755830, 1.61768389755830, -1.61768389755830],
                [-1.61768389755830, -1.61768389755830, -1.61768389755830],
                [1.61768389755830, -1.61768389755830, 1.61768389755830],
                [-1.61768389755830, 1.61768389755830, 1.61768389755830],
            ],
        ),
        "q": torch.tensor(  # shell charges
            [
                0.65663937010219842,
                3.5838834166484368e-2,
                -0.41737062303296546,
                -7.1859260070046282e-2,
                3.0823647611154144e-3,
                -7.1859260070044950e-2,
                3.0823647611152557e-3,
                -7.1859260070046727e-2,
                3.0823647611154179e-3,
                -7.1859260070045616e-2,
                3.0823647611153034e-3,
            ]
        ),
    },
}
